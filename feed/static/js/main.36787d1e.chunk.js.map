{"version":3,"sources":["reportWebVitals.js","../../../src/components/Button/ErrorMessage.tsx","components/Feed/Post/Post.jsx","api/Options.js","api/fetchTrendingFeed.js","utils/validateObject.js","services/getTrendingFeed.js","components/Feed/Feed.jsx","components/UserProfile/UserProfile.jsx","api/fetchUserInfo.js","services/getUserInfo.js","components/UserProfile/UserInfo.jsx","api/themes/Theme.js","api/themes/globalStyles.js","api/themes/useDarkmode.js","api/themes/Toggle.jsx","App.jsx","index.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","style","width","Meta","Card","Post","post","postHashtags","hashtags","map","h","name","id","hoverable","cover","text","height","controls","muted","autoPlay","src","videoUrl","actions","LikeOutlined","diggCount","CommentOutlined","commentCount","EllipsisOutlined","to","authorMeta","avatar","title","nickName","defaultProps","options","method","url","headers","process","fetchTrendingFeed","axios","request","validateObject","standardOb","valueObj","Object","entries","key","value","prototype","hasOwnProperty","call","Error","Array","isArray","standard","secretID","createTime","secUid","verified","signature","following","fans","heart","video","digg","musicMeta","musicId","musicName","musicAuthor","musicOriginal","musicAlbum","playUrl","coverThumb","coverMedium","coverLarge","duration","covers","default","origin","dynamic","webVideoUrl","videoUrlNoWaterMark","videoApiUrlNoWaterMark","videoMeta","shareCount","playCount","downloaded","mentions","effectStickers","getTrendingFeed","a","response","data","el","Feed","React","useState","posts","setPosts","error","setError","useEffect","postsElements","p","UserProfile","user","stats","layout","Item","label","nickname","followerCount","followingCount","heartCount","fetchUserInfo","shortId","uniqueId","avatarLarger","avatarMedium","avatarThumb","ftc","relation","openFavorite","bioLink","link","risk","commentSetting","duetSetting","stitchSetting","privateAccount","secret","isADVirtual","roomId","videoCount","itemList","getUserInfo","UserInfo","useParams","setUser","setStats","feed","setFeed","isError","setIsError","lightTheme","body","toggleBorder","toggleTextcolor","background","cardBorderColor","darkTheme","GlobalStyles","createGlobalStyle","theme","useDarkMode","setTheme","localTheme","window","localStorage","getItem","mode","setItem","Button","styled","button","Toggle","toggleTheme","onClick","App","themeToggler","themeMode","type","justify","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAYeA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,0FCkBL,EAdc,WACnB,OACE,kBAAC,MAAD,KACE,kBAAC,IAAD,CAAMQ,MAAO,CAAEC,MAAO,MACpB,kBAAC,KAAD,KAAI,YACJ,kBAAC,IAAD,KAAG,wH,8DCJLC,EAASC,IAATD,KAEFE,EAAO,YAAyB,IAATC,EAAQ,EAARA,KACrBC,EAAeD,EAAKE,SAASC,KAAI,SAACC,GAAD,OACrC,sCAAoBA,EAAEC,OAAXD,EAAEE,OAEf,OACE,eAAC,IAAD,CAEEC,WAAS,EACTZ,MAAO,CAAEC,MAAO,KAChBY,MACE,gCACE,4BAAIR,EAAKS,OACT,uBAAOb,MAAM,MAAMc,OAAO,MAAMC,UAAQ,EAACC,OAAK,EAACC,SAAS,WAAxD,SACE,wBAAQC,IAAKd,EAAKe,gBAIxBC,QAAS,CACP,gCACE,cAACC,EAAA,EAAD,IADF,IACoBjB,EAAKkB,aAEzB,gCACE,cAACC,EAAA,EAAD,IADF,IACuBnB,EAAKoB,gBAE5B,cAACC,EAAA,EAAD,GAAsB,aAnB1B,UAsBE,cAAC,IAAD,CAASC,GAAE,uBAAkBtB,EAAKuB,WAAWlB,MAA7C,SACE,cAACR,EAAD,CACE2B,OAAQ,cAAC,IAAD,CAAQV,IAAKd,EAAKuB,WAAWC,SACrCC,MAAOzB,EAAKuB,WAAWG,aAG3B,8BAAMzB,MA3BDD,EAAKM,KAgChBP,EAAK4B,aAAe,CAClB3B,KAAM,IAoBOD,Q,yBChEA6B,EATC,CACdC,OAAQ,MACRC,IAAK,GACLC,QAAS,CACP,kBAAmB,0BACnB,iBAAkBC,uDCIPC,EANW,WAGxB,OAAOC,IAAMC,QAAN,2BAAmBP,GAAnB,IAA4BE,IAFvB,oDCeCM,EAlBQ,SAAjBA,EAA2BC,EAAYC,GAC3C,cAA2BC,OAAOC,QAAQH,GAA1C,eAAuD,CAAlD,0BAAOI,EAAP,KAAYC,EAAZ,KACH,IAAKH,OAAOI,UAAUC,eAAeC,KAAKP,EAAUG,GAClD,MAAMK,MAAM,IAAD,OAAKL,EAAL,8CAEb,GAAIM,MAAMC,QAAQN,IAChB,IAAKK,MAAMC,QAAQV,EAASG,IAC1B,MAAMK,MACJ,2EAGsB,kBAAVJ,GAChBN,EAAeM,EAAOJ,EAASG,IAGnC,OAAOH,GCbHW,EAAW,CACf3C,GAAI,sBACJ4C,SAAU,sBACVzC,KAAM,uBACN0C,WAAY,WACZ5B,WAAY,CACVjB,GAAI,sBACJ8C,OACE,+EACF/C,KAAM,WACNqB,SAAU,WACV2B,UAAU,EACVC,UACE,uEACF9B,OACE,6KACF+B,UAAW,GACXC,KAAM,MACNC,MAAO,OACPC,MAAO,IACPC,KAAM,MAERC,UAAW,CACTC,QAAS,sBACTC,UAAW,2CACXC,YAAa,sCACbC,eAAe,EACfC,WAAY,2CACZC,QACE,oGACFC,WACE,wGACFC,YACE,wGACFC,WACE,wGACFC,SAAU,IAEZC,OAAQ,CACNC,QACE,yKACFC,OACE,qKACFC,QACE,wKAEJC,YAAa,6DACb5D,SACE,+aACF6D,oBAAqB,GACrBC,uBAAwB,GACxBC,UAAW,CAAEpE,OAAQ,IAAKd,MAAO,IAAK0E,SAAU,GAChDpD,UAAW,KACX6D,WAAY,KACZC,UAAW,MACX5D,aAAc,MACd6D,YAAY,EACZC,SAAU,GACVhF,SAAU,GACViF,eAAgB,CAAC,CAAE7E,GAAI,SAAUD,KAAM,oBAGnC+E,EAAe,uCAAG,WAAO/E,GAAP,eAAAgF,EAAA,sEACCpD,EAAkB5B,GADnB,cAChBiF,EADgB,yBAEfA,EAASC,KAAKpF,KAAI,SAACqF,GAAD,OAAQpD,EAAea,EAAUuC,OAFpC,2CAAH,sDAKNJ,IC7CAK,EAjBF,WACX,MAA0BC,IAAMC,SAAS,IAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BH,IAAMC,UAAS,GAAzC,mBAAOG,EAAP,KAAcC,EAAd,KAEAL,IAAMM,UAAN,sBAAgB,4BAAAX,EAAA,+EAEWD,IAFX,OAENE,EAFM,OAGZO,EAASP,GAHG,gDAKZS,GAAS,GALG,yDAOb,IAEH,IAAME,EAAgBL,EAAMzF,KAAI,SAAC+F,GAAD,OAAO,cAAC,EAAD,CAAMlG,KAAMkG,GAAQA,EAAE5F,OAC7D,OAAO,8BAAMwF,EAAQ,cAAC,EAAD,IAAmBG,K,kBChBpCE,EAAc,YAAuC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC/C,OACE,8BACE,eAAC,IAAD,CAAM9F,WAAS,EAACZ,MAAO,CAAEC,MAAO,KAAhC,UACE,eAAC,IAAD,CAAc6B,MAAM,aAAa6E,OAAO,WAAxC,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,WAAzB,SACGJ,EAAKK,WAER,cAAC,IAAaF,KAAd,CAAmBC,MAAM,mBAAzB,SACGJ,EAAKjD,aAER,cAAC,IAAaoD,KAAd,CAAmBC,MAAM,sBAAzB,SACGH,EAAMK,gBAET,cAAC,IAAaH,KAAd,CAAmBC,MAAM,UAAzB,SACGH,EAAMM,iBAET,cAAC,IAAaJ,KAAd,CAAmBC,MAAM,OAAzB,SAAiCH,EAAMO,gBAEzC,cAAC,IAAD,CAAcnF,MAAM,YAAY6E,OAAO,mBAM/CH,EAAYxE,aAAe,CACzByE,KAAM,GACNC,MAAO,IAeMF,I,IAAAA,IC7CTU,EAAa,uCAAG,WAAOxG,GAAP,eAAAgF,EAAA,6DACdvD,EADc,oDACqCzB,GADrC,kBAGb6B,IAAMC,QAAN,2BAAmBP,GAAnB,IAA4BE,UAHf,2CAAH,sDAMJ+E,ICNT5D,EAAW,CACfmD,KAAM,CACJ9F,GAAI,qBACJwG,QAAS,IACTC,SAAU,eACVN,SAAU,eACVO,aAAc,wCACdC,aAAc,wCACdC,YAAa,kCACb5D,UAAW,yDACXH,WAAY,WACZE,UAAU,EACVD,OAAQ,kBACR+D,KAAK,EACLC,SAAU,EACVC,cAAc,EACdC,QAAS,CACPC,KAAM,iBACNC,KAAM,GAERC,eAAgB,EAChBC,YAAa,EACbC,cAAe,EACfC,gBAAgB,EAChBC,QAAQ,EACRC,aAAa,EACbC,OAAQ,IAEV1B,MAAO,CACLK,cAAe,EACfC,eAAgB,EAChBlD,MAAO,EACPmD,WAAY,EACZoB,WAAY,EACZ9G,UAAW,GAEb+G,SAAU,IAGNC,EAAW,uCAAG,4BAAA7C,EAAA,sEACKwB,IADL,cACZvB,EADY,yBAEXlD,EAAea,EAAUqC,EAASC,OAFvB,2CAAH,qDAKF2C,ICKAC,EAzCE,WACf,IAAQ9H,EAAS+H,cAAT/H,KACR,EAAwBqF,IAAMC,SAAS,MAAvC,mBAAOS,EAAP,KAAaiC,EAAb,KACA,EAA0B3C,IAAMC,SAAS,MAAzC,mBAAOU,EAAP,KAAciC,EAAd,KACA,EAAwB5C,IAAMC,SAAS,MAAvC,mBAAO4C,EAAP,KAAaC,EAAb,KACA,EAA8B9C,IAAMC,UAAS,GAA7C,mBAAO8C,EAAP,KAAgBC,EAAhB,KAsBA,OApBAhD,IAAMM,UAAN,sBAAgB,4BAAAX,EAAA,+EAEW6C,EAAY7H,GAFvB,OAENiF,EAFM,OAGZ+C,EAAQ/C,EAASc,MACjBkC,EAAShD,EAASe,OAClBmC,EAAQ,MALI,gDAOZE,GAAW,GAPC,yDASb,CAACrI,IAEJqF,IAAMM,UAAN,sBAAgB,4BAAAX,EAAA,+EAEWpD,EAAkB5B,GAF7B,OAENiF,EAFM,OAGZkD,EAAQlD,EAASC,MAHL,gDAKZmD,GAAW,GALC,yDAOb,CAACrI,IAGF,8BACGoI,EACC,cAAC,EAAD,IAEA,gCACGrC,GAAQC,EAAQ,cAAC,EAAD,CAAaD,KAAMA,EAAMC,MAAOA,IAAY,cAAC,IAAD,IAC5DkC,EAAOA,EAAKpI,KAAI,SAAC+F,GAAD,OAAO,cAAC,EAAD,CAAMlG,KAAMkG,GAAQA,EAAE5F,OAAU,cAAC,IAAD,UC7CrDqI,EAAa,CACxBC,KAAM,UACNnI,KAAM,YACNoI,aAAc,OACdC,gBAAiB,UACjBC,WAAY,UACZC,gBAAiB,WAENC,EAAY,CACvBL,KAAM,UACNnI,KAAM,UACNoI,aAAc,UACdC,gBAAiB,UACjBC,WAAY,OACZC,gBAAiB,W,SC0BJE,EAtCMC,YAAH,+kBAEF,qBAAGC,MAAkBR,QAC1B,qBAAGQ,MAAkB3I,QAKhB,qBAAG2I,MAAkBR,QAC1B,qBAAGQ,MAAkB3I,QACnB,qBAAG2I,MAAkBJ,mBAGlB,qBAAGI,MAAkBR,QAW1B,qBAAGQ,MAAkB3I,QAIrB,qBAAG2I,MAAkB3I,QAIrB,qBAAG2I,MAAkB3I,QAGrB,qBAAG2I,MAAkB3I,QCfjB4I,GApBK,WAClB,MAA0B1D,mBAAS,SAAnC,mBAAOyD,EAAP,KAAcE,EAAd,KAiBA,OANAtD,qBAAU,WACR,IAAMuD,EAAaC,OAAOC,aAAaC,QAAQ,SAC3CH,GACFD,EAASC,KAEV,IACI,CAACH,EAVa,WALL,IAACO,IAMG,UAAVP,EAAoB,OAAS,QALrCI,OAAOC,aAAaG,QAAQ,QAASD,GACrCL,EAASK,MCHPE,GAASC,IAAOC,OAAV,oLACI,qBAAGX,MAAkBL,cACf,qBAAGK,MAAkBP,gBAiB5BmB,GARA,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACb,cAACJ,GAAD,CAAQK,QAASD,EAAjB,2BCwBaE,GAxBH,WACV,MAA8Bd,KAA9B,mBAAOD,EAAP,KAAcgB,EAAd,KAIMC,EAAsB,UAAVjB,EAAoBT,EAAaM,EAEnD,OACE,eAAC,IAAD,CAAeG,MAAOiB,EAAtB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,CAAQjB,MAAOA,EAAOa,YAAaG,IACnC,cAAC,IAAD,CAAKE,KAAK,OAAOC,QAAQ,SAAzB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,qBAAqBC,QAAS,cAAC,EAAD,mB,OCxBxDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1B5L,M","file":"static/js/main.36787d1e.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport React from 'react';\r\n\r\nimport { Card } from 'antd';\r\n\r\nexport interface ButtonProps {\r\n    // label: string,\r\n    // color: string,\r\n    // onClick: Function,\r\n  }\r\n  \r\n  const ErrorMessage = function ErrorMessage() {\r\n    return (\r\n      <div>\r\n        <Card style={{ width: 320 }}>\r\n          <h2>Oooopsie</h2>\r\n          <p>\r\n            Something went wrong. We are working on getting this fixed as soon as\r\n            we can. You may be able to try again later.\r\n          </p>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ErrorMessage;\r\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport { Card, Avatar } from 'antd';\nimport {\n  EllipsisOutlined,\n  LikeOutlined,\n  CommentOutlined,\n} from '@ant-design/icons';\n\nconst { Meta } = Card;\n\nconst Post = function Post({ post }) {\n  const postHashtags = post.hashtags.map((h) => (\n    <span key={h.id}> #{h.name}</span>\n  ));\n  return (\n    <Card\n      key={post.id}\n      hoverable\n      style={{ width: 320 }}\n      cover={\n        <div>\n          <p>{post.text}</p>\n          <video width=\"320\" height=\"240\" controls muted autoPlay=\"autoplay\">\n            <source src={post.videoUrl} />\n          </video>\n        </div>\n      }\n      actions={[\n        <div>\n          <LikeOutlined /> {post.diggCount}\n        </div>,\n        <div>\n          <CommentOutlined /> {post.commentCount}\n        </div>,\n        <EllipsisOutlined key=\"ellipsis\" />,\n      ]}\n    >\n      <NavLink to={`/userProfile/${post.authorMeta.name}`}>\n        <Meta\n          avatar={<Avatar src={post.authorMeta.avatar} />}\n          title={post.authorMeta.nickName}\n        />\n      </NavLink>\n      <div>{postHashtags}</div>\n    </Card>\n  );\n};\n\nPost.defaultProps = {\n  post: {},\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.string,\n    hashtags: PropTypes.arrayOf(\n      PropTypes.shape({ id: PropTypes.string, name: PropTypes.string })\n    ),\n    videoUrl: PropTypes.string,\n    text: PropTypes.string,\n    diggCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    commentCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    authorMeta: PropTypes.shape({\n      name: PropTypes.string,\n      avatar: PropTypes.string,\n      nickName: PropTypes.string,\n    }),\n  }),\n};\nexport default Post;\n","const options = {\r\n  method: 'GET',\r\n  url: '',\r\n  headers: {\r\n    'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\r\n    'x-rapidapi-key': process.env.REACT_APP_RAPID_API_SECRET_KEY,\r\n  },\r\n};\r\n\r\nexport default options;\r\n","import axios from 'axios';\r\nimport options from './Options';\r\n\r\nconst fetchTrendingFeed = () => {\r\n  const url = 'https://tiktok33.p.rapidapi.com/trending/feed';\r\n  // const url = 'http://192.168.0.141/feed.json';\r\n  return axios.request({ ...options, url });\r\n};\r\n\r\nexport default fetchTrendingFeed;\r\n","/* eslint-disable no-restricted-syntax */\r\nconst validateObject = function (standardOb, valueObj) {\r\n  for (const [key, value] of Object.entries(standardOb)) {\r\n    if (!Object.prototype.hasOwnProperty.call(valueObj, key)) {\r\n      throw Error(`\"${key}\" property does not exist in value object`);\r\n    }\r\n    if (Array.isArray(value)) {\r\n      if (!Array.isArray(valueObj[key])) {\r\n        throw Error(\r\n          'If it is an array in standard it should be an array in value object'\r\n        );\r\n      }\r\n    } else if (typeof value === 'object') {\r\n      validateObject(value, valueObj[key]);\r\n    }\r\n  }\r\n  return valueObj;\r\n};\r\n\r\nexport default validateObject;\r\n","import fetchTrendingFeed from '../api/fetchTrendingFeed';\r\nimport validateObject from '../utils/validateObject';\r\n\r\nconst standard = {\r\n  id: '7006694664724122881',\r\n  secretID: '7006694664724122881',\r\n  text: 'Instagram: kikakim??',\r\n  createTime: 1631373229,\r\n  authorMeta: {\r\n    id: '6785823001336415238',\r\n    secUid:\r\n      'MS4wLjABAAAAeH_XfG3mng5HdtOKKaKXj-breE3_2JkVUjlF5REet8fu3MeuaOCoRqNV06xcX_U4',\r\n    name: 'kikakiim',\r\n    nickName: 'Kika Kim',\r\n    verified: false,\r\n    signature:\r\n      '@xoteam\\nInstagram: @kikakim\\nCooperation: kikakim.booking@gmail.com',\r\n    avatar:\r\n      'https://p16-sign-sg.tiktokcdn.com/aweme/1080x1080/tos-alisg-avt-0068/a4777fe51994e2ff798bdc9dd1100846.jpeg?x-expires=1637204400&x-signature=r2E95i2c51SR9chBkXI9zSHi7Oc%3D',\r\n    following: 89,\r\n    fans: 24100000,\r\n    heart: 629300000,\r\n    video: 829,\r\n    digg: 6733,\r\n  },\r\n  musicMeta: {\r\n    musicId: '6952235736812750850',\r\n    musicName: 'C? Chill Th�i (DJ TuSo & LEA Remix)',\r\n    musicAuthor: 'Chillies & Suni H? Linh & Rhymastic',\r\n    musicOriginal: false,\r\n    musicAlbum: 'C? Chill Th�i (DJ TuSo & LEA Remix)',\r\n    playUrl:\r\n      'https://sf16-ies-music-va.tiktokcdn.com/obj/tos-useast2a-ve-2774/dec7f7cce681453daf20aed3e778ca86',\r\n    coverThumb:\r\n      'https://p77-va.tiktokcdn.com/img/tos-useast2a-v-2774/f5e7758750504d5b830a12ebbb339047~c5_100x100.jpeg',\r\n    coverMedium:\r\n      'https://p77-va.tiktokcdn.com/img/tos-useast2a-v-2774/f5e7758750504d5b830a12ebbb339047~c5_200x200.jpeg',\r\n    coverLarge:\r\n      'https://p77-va.tiktokcdn.com/img/tos-useast2a-v-2774/f5e7758750504d5b830a12ebbb339047~c5_720x720.jpeg',\r\n    duration: 60,\r\n  },\r\n  covers: {\r\n    default:\r\n      'https://p16-sign-sg.tiktokcdn.com/obj/tos-alisg-p-0037/e31a9812e60940d084d78b6318eb668f_1631373232?x-expires=1637139600&x-signature=rKn%2B9E9SL97jOKwJhqoYtW%2F5vnU%3D',\r\n    origin:\r\n      'https://p16-sign-sg.tiktokcdn.com/obj/tos-alisg-p-0037/dcedfb7991ab4281857f3da123b599a9_1631373231?x-expires=1637139600&x-signature=UdM0NbzZKBbyOaeIi5PWxhYDgtU%3D',\r\n    dynamic:\r\n      'https://p16-sign-sg.tiktokcdn.com/obj/tos-alisg-p-0037/6d5b110eb075424bba9cf241b0c418a6_1631373231?x-expires=1637139600&x-signature=GchIsT%2Bv3eQZ54Z6fpdbbANFBe4%3D',\r\n  },\r\n  webVideoUrl: 'https://www.tiktok.com/@kikakiim/video/7006694664724122881',\r\n  videoUrl:\r\n    'https://v39-eu.tiktokcdn.com/1e9aabf4c75ac8178ee08e84661e3126/6194c66e/video/tos/alisg/tos-alisg-pve-0037c001/449c8bd66c7941a5ba06ef064081e855/?a=1233&br=3502&bt=1751&cd=0%7C0%7C1&ch=0&cr=0&cs=0&cv=1&dr=0&ds=3&er=&ft=wZ~R_F5qkag3-I&l=202111170307480101901760455A15858E&lr=tiktok_m&mime_type=video_mp4&net=0&pl=0&qs=0&rc=amttNjU6ZjtmNzMzODczNEApNDhoOTozNWU2NzdkM2Y0ZGdtcTBxcjRvY3JgLS1kMS1zcy5iNDJfMTU2NDMyXjYvNTI6Yw%3D%3D&vl=&vr=',\r\n  videoUrlNoWaterMark: '',\r\n  videoApiUrlNoWaterMark: '',\r\n  videoMeta: { height: 960, width: 540, duration: 9 },\r\n  diggCount: 4100000,\r\n  shareCount: 9382,\r\n  playCount: 31600000,\r\n  commentCount: 20100,\r\n  downloaded: false,\r\n  mentions: [],\r\n  hashtags: [],\r\n  effectStickers: [{ id: '459476', name: 'Color Selector' }],\r\n};\r\n\r\nconst getTrendingFeed = async (name) => {\r\n  const response = await fetchTrendingFeed(name);\r\n  return response.data.map((el) => validateObject(standard, el));\r\n};\r\n\r\nexport default getTrendingFeed;\r\n","import React from 'react';\n\nimport { ErrorMessage } from 'component-library';\n\nimport Post from './Post/Post';\n\nimport getTrendingFeed from '../../services/getTrendingFeed';\n\nconst Feed = function Feed() {\n  const [posts, setPosts] = React.useState([]);\n  const [error, setError] = React.useState(false);\n\n  React.useEffect(async () => {\n    try {\n      const response = await getTrendingFeed();\n      setPosts(response);\n    } catch (er) {\n      setError(true);\n    }\n  }, []);\n\n  const postsElements = posts.map((p) => <Post post={p} key={p.id} />);\n  return <div>{error ? <ErrorMessage /> : postsElements}</div>;\n};\n\nexport default Feed;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card, Descriptions } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst UserProfile = function UserProfile({ user, stats }) {\n  return (\n    <div>\n      <Card hoverable style={{ width: 320 }}>\n        <Descriptions title=\"User Info:\" layout=\"vertical\">\n          <Descriptions.Item label=\"Nickname\">\n            {user.nickname}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"First registered\">\n            {user.createTime}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Number of followers\">\n            {stats.followerCount}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Friends\">\n            {stats.followingCount}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Favs\">{stats.heartCount}</Descriptions.Item>\n        </Descriptions>\n        <Descriptions title=\"My posts:\" layout=\"vertical\" />\n      </Card>\n    </div>\n  );\n};\n\nUserProfile.defaultProps = {\n  user: {},\n  stats: {},\n};\n\nUserProfile.propTypes = {\n  user: PropTypes.shape({\n    nickname: PropTypes.string,\n    createTime: PropTypes.number,\n  }),\n  stats: PropTypes.shape({\n    followerCount: PropTypes.number,\n    followingCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    heartCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  }),\n};\n\nexport default UserProfile;\n","import axios from 'axios';\r\nimport options from './Options';\r\n\r\nconst fetchUserInfo = async (name) => {\r\n  const url = `https://tiktok33.p.rapidapi.com/user/info/${name}`;\r\n  // const url = `http://192.168.0.141/user.json?name=${name}`;\r\n  return axios.request({ ...options, url });\r\n};\r\n\r\nexport default fetchUserInfo;\r\n","import fetchUserInfo from '../api/fetchUserInfo';\r\nimport validateObject from '../utils/validateObject';\r\n\r\nconst standard = {\r\n  user: {\r\n    id: '241418783272443904',\r\n    shortId: '0',\r\n    uniqueId: 'dave.johnson',\r\n    nickname: 'Dave Johnson',\r\n    avatarLarger: 'https://path to a larger avatar image',\r\n    avatarMedium: 'https://path to a medium avatar image',\r\n    avatarThumb: 'https://path to an avatra thumb',\r\n    signature: '???? Animator from Costa Rica\\nGet my app Dollify!\\n??',\r\n    createTime: 1497901438,\r\n    verified: true,\r\n    secUid: 'SuPeRsEcUrEHaSh',\r\n    ftc: false,\r\n    relation: 0,\r\n    openFavorite: false,\r\n    bioLink: {\r\n      link: 'dollifyapp.com',\r\n      risk: 3,\r\n    },\r\n    commentSetting: 0,\r\n    duetSetting: 0,\r\n    stitchSetting: 0,\r\n    privateAccount: false,\r\n    secret: false,\r\n    isADVirtual: false,\r\n    roomId: '',\r\n  },\r\n  stats: {\r\n    followerCount: 0,\r\n    followingCount: 0,\r\n    heart: 0,\r\n    heartCount: 0,\r\n    videoCount: 0,\r\n    diggCount: 0,\r\n  },\r\n  itemList: [],\r\n};\r\n\r\nconst getUserInfo = async () => {\r\n  const response = await fetchUserInfo();\r\n  return validateObject(standard, response.data);\r\n};\r\n\r\nexport default getUserInfo;\r\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Spin } from 'antd';\n\nimport { ErrorMessage } from 'component-library';\nimport UserProfile from './UserProfile';\nimport Post from '../Feed/Post/Post';\nimport getUserInfo from '../../services/getUserInfo';\nimport fetchTrendingFeed from '../../api/fetchTrendingFeed';\n\nconst UserInfo = function UserInfo() {\n  const { name } = useParams();\n  const [user, setUser] = React.useState(null);\n  const [stats, setStats] = React.useState(null);\n  const [feed, setFeed] = React.useState(null);\n  const [isError, setIsError] = React.useState(false);\n\n  React.useEffect(async () => {\n    try {\n      const response = await getUserInfo(name);\n      setUser(response.user);\n      setStats(response.stats);\n      setFeed(null);\n    } catch (error) {\n      setIsError(true);\n    }\n  }, [name]);\n\n  React.useEffect(async () => {\n    try {\n      const response = await fetchTrendingFeed(name);\n      setFeed(response.data);\n    } catch (error) {\n      setIsError(true);\n    }\n  }, [name]);\n\n  return (\n    <div>\n      {isError ? (\n        <ErrorMessage />\n      ) : (\n        <div>\n          {user && stats ? <UserProfile user={user} stats={stats} /> : <Spin />}\n          {feed ? feed.map((p) => <Post post={p} key={p.id} />) : <Spin />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UserInfo;\n","export const lightTheme = {\r\n  body: '#ffffff',\r\n  text: '#000000d9',\r\n  toggleBorder: '#FFF',\r\n  toggleTextcolor: '#FAFAFA',\r\n  background: '#363537',\r\n  cardBorderColor: '#f0f0f0',\r\n};\r\nexport const darkTheme = {\r\n  body: '#363537',\r\n  text: '#FAFAFA',\r\n  toggleBorder: '#6B8096',\r\n  toggleTextcolor: '#FAFAFA',\r\n  background: '#999',\r\n  cardBorderColor: '#362e2e',\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\nbody {\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n  transition: all 0.50s linear;\r\n}\r\n.ant-card{\r\n  background: ${({ theme }) => theme.body};\r\n  color: ${({ theme }) => theme.text};\r\n  border:  ${({ theme }) => theme.cardBorderColor};\r\n}\r\n.ant-card-actions{\r\n  background: ${({ theme }) => theme.body};\r\n  border:none;\r\n}\r\n.ant-card-actions > li{\r\n  color:#aaa;\r\n}\r\n.ant-card-actions > li > span > .anticon{\r\n  color:#aaa;\r\n}\r\n\r\n.ant-card-meta-title{\r\n  color: ${({ theme }) => theme.text};\r\n}\r\n\r\n.ant-descriptions-title {\r\n  color: ${({ theme }) => theme.text};\r\n}\r\n\r\n.ant-descriptions-item-label{\r\n  color: ${({ theme }) => theme.text};\r\n}\r\n.ant-descriptions-item-content{\r\n  color: ${({ theme }) => theme.text};\r\n}\r\n`;\r\nexport default GlobalStyles;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDarkMode = () => {\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem('theme', mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const themeToggler = () => {\r\n    setMode(theme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem('theme');\r\n    if (localTheme) {\r\n      setTheme(localTheme);\r\n    }\r\n  }, []);\r\n  return [theme, themeToggler];\r\n};\r\nexport default useDarkMode;\r\n","import { func } from 'prop-types';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background: ${({ theme }) => theme.background};\r\n  border: 2px solid ${({ theme }) => theme.toggleBorder};\r\n  color: #FFF;\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  font-size:0.8rem;\r\n  padding: 0.6rem;\r\n  }\r\n`;\r\n\r\nconst Toggle = ({ toggleTheme }) => (\r\n  <Button onClick={toggleTheme}>Switch Theme</Button>\r\n);\r\n\r\nToggle.propTypes = {\r\n  toggleTheme: func.isRequired,\r\n};\r\n\r\nexport default Toggle;\r\n","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\nimport './App.css';\nimport { Row, Col } from 'antd';\n\nimport { ThemeProvider } from 'styled-components';\n\nimport Feed from './components/Feed/Feed';\nimport UserInfo from './components/UserProfile/UserInfo';\n\nimport { darkTheme, lightTheme } from './api/themes/Theme';\nimport GlobalStyles from './api/themes/globalStyles';\nimport useDarkMode from './api/themes/useDarkmode';\nimport Toggle from './api/themes/Toggle';\n\nconst App = function App() {\n  const [theme, themeToggler] = useDarkMode();\n  // const themeToggler = () => {\n  //   setTheme(theme === 'light' ? 'dark' : 'light');\n  // };\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <GlobalStyles />\n      <Toggle theme={theme} toggleTheme={themeToggler} />\n      <Row type=\"flex\" justify=\"center\">\n        <Col>\n          <BrowserRouter>\n            <Routes>\n              <Route path=\"/feed\" element={<Feed />} />\n              <Route path=\"/userProfile/:name\" element={<UserInfo />} />\n            </Routes>\n          </BrowserRouter>\n        </Col>\n      </Row>\n    </ThemeProvider>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}